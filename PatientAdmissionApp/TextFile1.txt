MainWindow.xaml
----------------------------------------------------
<Window x:Class="PatientAdmissionApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PatientAdmissionApp"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200" />
            <!-- Navigation Column -->
            <ColumnDefinition Width="*" />
            <!-- Content Column -->
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Column="0" Margin="20,20,589,20" Grid.ColumnSpan="2">
            
            <Button Content="Patient Registration"  Width="160" Height="40" Margin="0,10" x:Name="btnRegistration" Click="btnRegistration_Click" />
            <Button x:Name="btnAppointment" Content="Appointment Confirmation"  Width="160" Height="40" Margin="0,10" Click="btnAppointment_Click" />
            <Button x:Name="btnDashboard" Content="Patient Dashboard"  Width="160" Height="40" Margin="0,10" Click="btnDashboard_Click" />
            <Button x:Name="btnExit" Content="Exit"  Width="160" Height="40" Margin="0,10" Click="btnExit_Click" />
        </StackPanel>

        <ContentControl x:Name="MainContent" Grid.Column="1" Margin="20" />
    </Grid>
</Window>

------------------------------
MainWindow.xaml.cs


using System.Windows;

namespace PatientAdmissionApp
{
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
            this.DataContext = new PatientViewModel();

        }

        private void btnRegistration_Click(object sender, RoutedEventArgs e)
        {
            

                var confirmationControl = new PatientRegistrationControl();


                var mainWindow = Window.GetWindow(this) as MainWindow;
                if (mainWindow != null)
                {
                    mainWindow.MainContent.Content = confirmationControl;
                }
            
        }

        private void btnAppointment_Click(object sender, RoutedEventArgs e)
        {
            var appointmentControl = new AppointmentControl();
            var appointmentWindow = Window.GetWindow(this) as MainWindow;

            if (appointmentWindow != null)
            {
                appointmentWindow.MainContent.Content = appointmentControl;

            }
        }

        private void btnDashboard_Click(object sender, RoutedEventArgs e)
        {
            var patientDashboardControl = new PatientDashboardControl();
            var patientDashboard = Window.GetWindow(this) as MainWindow;

            if (patientDashboard != null)
            {
                patientDashboard.MainContent.Content = patientDashboardControl;

            }
        }

        private void Exit_Click(object sender, RoutedEventArgs e)
        {
            Application.Current.Shutdown();
        }
    }
}






PatientRegistrationControl.xaml
---------------------------------------------
<UserControl x:Class="PatientAdmissionApp.PatientRegistrationControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PatientAdmissionApp" d:DataContext="{d:DesignInstance Type=local:PatientViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
   
    <Grid>
        <StackPanel Margin="20">
            <TextBlock Text="Patient Registration" FontSize="20" FontWeight="Bold" />
            <TextBlock Text="Name:"  />
            <TextBox x:Name="NameTextBox" Text="{Binding NewPatient.Name}" />
            <TextBlock Text="Age:" />
            <TextBox x:Name="AgeTextBox" Text="{Binding NewPatient.Age}"/>
            <TextBlock Text="Date of Birth:" />
            <DatePicker x:Name="DOBPicker" SelectedDate="{Binding NewPatient.Dateofbirth}" SelectedDateFormat="Short"/>
            <TextBlock Text="Address:" />
                <TextBox x:Name="AddressTextBox" Text="{Binding NewPatient.Address}"/>
            <TextBlock Text="Slot:" />
            <ComboBox x:Name="SlotComboBox" Text="{Binding NewPatient.Slot}"> 
                <ComboBoxItem Content="Morning"  />
                <ComboBoxItem Content="Evening" />
            </ComboBox>



            <TextBlock Text="Booking Date:" />
            <DatePicker x:Name="BookingDatePicker" SelectedDateFormat="Short" SelectedDate="{Binding NewPatient.BookingDate}" />
            <Button Content="Register" Width="100" Height="30" Margin="0,10,0,0" Command="{Binding RegisterPatientCommand}" />
        </StackPanel>
    </Grid>
</UserControl>


AppointmentControl.xaml
_________________________________
<UserControl x:Class="PatientAdmissionApp.AppointmentControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PatientAdmissionApp" d:DataContext="{d:DesignInstance Type=local:PatientViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid Margin="20">
        <StackPanel>
            <TextBlock Text="Appointment Confirmation" FontSize="18" FontWeight="Bold" Margin="0,0,0,10"/>

            <TextBlock Text="Patient Name:"/>
            <TextBox x:Name="PatientNameTextBox" Width="200" Text="{Binding Patients.Name}"/>

            <TextBlock Text="Appointment Date:"/>
            <DatePicker x:Name="AppointmentDatePicker" Width="200" SelectedDateFormat="Short" SelectedDate="{Binding NewPatient.ApponitmentDate}"/>

            <TextBlock Text="Confirmation Status:"/>
            <ComboBox x:Name="StatusComboBox" Width="200">
                <ComboBoxItem Content="Confirmed"/>
                <ComboBoxItem Content="Pending"/>
                <ComboBoxItem Content="Cancelled"/>
            </ComboBox>

            <Button Content="Send Update" Width="100" Height="30" Margin="0,10,0,0"/>


            <TextBlock Text="Registered Patients" FontSize="16" FontWeight="Bold" Margin="0,20,0,5"/>
            <DataGrid x:Name="PatientsDataGrid" AutoGenerateColumns="False" Height="200" Margin="0,10,0,0" ItemsSource="{Binding Patients}">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Patient Name" Binding="{Binding Name}" Width="*"/>
                    <DataGridTextColumn Header="Age" Binding="{Binding Age}" Width="*"/>
                    <DataGridTextColumn Header="Booking Date" Binding="{Binding BookingDate}" Width="*"/>
                    <DataGridTextColumn Header="Date of Birth" Binding="{Binding Dateofbirth}" Width="*"/>
                    <DataGridTextColumn Header="Slot" Binding="{Binding Slot}" Width="*"/>
                </DataGrid.Columns>
            </DataGrid>
        </StackPanel>
    </Grid>

</UserControl>

PatientDashboardControl.xaml
---------------------------------------
<UserControl x:Class="PatientAdmissionApp.PatientDashboardControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PatientAdmissionApp"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid Margin="20">
        <StackPanel>
            <TextBlock Text="Patient Dashboard" FontSize="22" FontWeight="Bold" Margin="0,0,0,20"/>

            <!-- Patients DataGrid -->
            <DataGrid ItemsSource="{Binding Patients}" AutoGenerateColumns="False" Height="150">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" />
                    <DataGridTextColumn Header="Age" Binding="{Binding Age}" />
                    <DataGridTextColumn Header="Address" Binding="{Binding Address}" />
                    
                </DataGrid.Columns>
            </DataGrid>

            <!-- Medical Records DataGrid -->
            <DataGrid ItemsSource="{Binding MedicalRecords}" AutoGenerateColumns="False" Height="200" Margin="0,20,0,0">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Date" Binding="{Binding Date}" />
                    <DataGridTextColumn Header="Diagnosis" Binding="{Binding Diagnosis}" />
                    <DataGridTextColumn Header="Prescription" Binding="{Binding Prescription}" />
                    <DataGridTextColumn Header="Notes" Binding="{Binding Notes}" />
                </DataGrid.Columns>
            </DataGrid>

            <!-- Action Buttons -->
            
            <Button Content="Filter Records"  Width="150" Margin="0,10"/>
        </StackPanel>
    </Grid>
</UserControl>


PatientModel.cs
------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace PatientAdmissionApp
{
    public class PatientModel
    {
        public string Name { get; set; }
        public int Age { get; set; }
        public DateTime Dateofbirth { get; set; } = DateTime.Now;
        public string Address { get; set; }
        public DateTime BookingDate { get; set; } = DateTime.Now;
        public DateTime ApponitmentDate { get; set; } = DateTime.Now;
        public string ConfirmationStatus { get; set; }
        public string Slot { get; set; }
    }
}




IPatient.cs
__________________________________________

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace PatientAdmissionApp
{
    public interface Ipatient
    {
        ObservableCollection<PatientModel> Patients { get; }
        void RegisterPatient(PatientModel patient);
        //void LoadPatients();
        event EventHandler PatientsUpdated;
    }
}
BaseViewModel.cs
------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using System.ComponentModel;

namespace PatientAdmissionApp
{
    public class BaseViewModel : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void OnPropertyChanged(string propertyName = null)
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }

        private object _currentView;
        public object CurrentView
        {
            get { return _currentView; }
            set { _currentView = value; OnPropertyChanged(nameof(CurrentView)); }
        }
    }
}

PatientViewModel.cs
______________________________
using System.Collections.ObjectModel;
using System.Windows;
using System.Windows.Input;

namespace PatientAdmissionApp
{
    public class PatientViewModel : BaseViewModel
    {
        public ObservableCollection<PatientModel> Patients { get; set; } = new ObservableCollection<PatientModel>();

        private PatientModel _newPatient;
        public PatientModel NewPatient
        {
            get { return _newPatient; }
            set { _newPatient = value; OnPropertyChanged(); }
        }

        private PatientModel _selectedPatient;
        public PatientModel SelectedPatient
        {
            get { return _selectedPatient; }
            set { _selectedPatient = value; OnPropertyChanged(); }
        }
        private bool _selectedSlot;
        public bool SelectedSlot
        {
            get { return _selectedSlot; }
            set { _selectedSlot = value; OnPropertyChanged(nameof(SelectedSlot)); }
        }

        public ICommand RegisterPatientCommand { get; set;}
        public ICommand SendUpdateCommand { get; set; }
        public ICommand ShowRegistrationCommand { get; set; }
        public ICommand ShowAppointmentCommand { get; set; }
        public ICommand ShowDashboardCommand { get; set; }
        public ICommand ExitCommand { get; set; }

        public PatientViewModel()
        {
            NewPatient = new PatientModel();
            RegisterPatientCommand = new RelayCommand(RegisterPatient);
            SendUpdateCommand = new RelayCommand(SendUpdate);
            ShowRegistrationCommand = new RelayCommand(ShowRegistration);
            ShowAppointmentCommand = new RelayCommand(ShowAppointment);
            ShowDashboardCommand = new RelayCommand(ShowDashboard);
            ExitCommand = new RelayCommand(ExitApplication);
        }

        private void RegisterPatient(object parameter)
        {
            Patients.Add(new PatientModel
            {
                Name = NewPatient.Name,
                Age = NewPatient.Age,
                DateofBirth = NewPatient.DateofBirth,
                Address = NewPatient.Address,
                Slot = NewPatient.Slot,
                BookingDate = NewPatient.BookingDate
            });
            NewPatient = new PatientModel();
            MessageBox.Show("Registration Success!!!!");

        }


        private void SendUpdate(object parameter)
        {
            // Logic to send update
        }

        private void ShowRegistration(object parameter)
        {
            CurrentView = new PatientRegistrationControl() { DataContext = this }; 
        }

        private void ShowAppointment(object parameter)
        {
            CurrentView = new AppointmentControl() { DataContext = this };
        }

        private void ShowDashboard(object parameter)
        {
            CurrentView = new PatientDashboardControl { DataContext = this  };
        }

        private void ExitApplication(object parameter)
        {
            Application.Current.Shutdown();
        }
    }
}